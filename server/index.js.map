{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"http\"","webpack:///external \"socket.io\"","webpack:///external \"koa\"","webpack:///./index.babel.js"],"names":["Koa","require","socket","http","app","server","Server","callback","io","str","upperCase","toUpperCase","use","context","next","body","on","emit","hello","data","console","log","listen","_"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;ACnEA,iC;;;;;;ACAA,sC;;;;;;ACAA,gC;;;;;;ACEA,MAAMA,MAAM,mBAAAC,CAAQ,CAAR,CAAZ;AACA,MAAMC,SAAS,mBAAAD,CAAQ,CAAR,CAAf;AACA,MAAME,OAAO,mBAAAF,CAAQ,CAAR,CAAb;AACA,MAAMG,MAAM,IAAIJ,GAAJ,EAAZ;AACA,MAAMK,SAAUF,KAAKG,MAAN,CAAwBF,IAAIG,QAAJ,EAAxB,CAAf;;AAEA,MAAMC,KAAKN,OAAOG,MAAP,CAAX;;AAEA,MAAMI,MAAc,iBAApB;;AAEA,SAASC,SAAT,CAAmBD,GAAnB,EAAwC;AACtC,SAAOA,IAAIE,WAAJ,EAAP;AACD;;AAEDP,IAAIQ,GAAJ,CAAQ,OAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AAC/BD,UAAQE,IAAR,GAAeL,UAAUD,GAAV,CAAf;AACD,CAFD;;AAIAD,GAAGQ,EAAH,CAAM,YAAN,EAAoBd,UAAU;AAC5BA,SAAOe,IAAP,CAAY,MAAZ,EAAoB,EAAEC,OAAO,OAAT,EAApB;AACAhB,SAAOc,EAAP,CAAU,gBAAV,EAA4BG,QAAQ;AAClCC,YAAQC,GAAR,CAAYF,IAAZ;AACD,GAFD;AAGD,CALD;;AAOAd,OAAOiB,MAAP,CAAc,KAAd,EAAqBC,KAAKH,QAAQC,GAAR,CAAY,sCAAZ,CAA1B,E","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"http\");","module.exports = require(\"socket.io\");","module.exports = require(\"koa\");","// @flow\n\nconst Koa = require('koa')\nconst socket = require('socket.io')\nconst http = require('http')\nconst app = new Koa()\nconst server = (http.Server: Function)(app.callback())\n\nconst io = socket(server)\n\nconst str: string = '向Markdown工程师致敬.'\n\nfunction upperCase(str: string): string {\n  return str.toUpperCase()\n}\n\napp.use(async (context, next) => {\n  context.body = upperCase(str)\n})\n\nio.on('connection', socket => {\n  socket.emit('news', { hello: 'world' })\n  socket.on('my other event', data => {\n    console.log(data)\n  })\n})\n\nserver.listen(12306, _ => console.log('server run as http://127.0.0.1:12306'))\n"],"sourceRoot":""}